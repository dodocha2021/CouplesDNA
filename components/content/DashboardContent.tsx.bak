"use client"

import React, { useState, useEffect, useCallback } from 'react'
import { useRouter } from 'next/router'
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'
import { Badge } from '@/components/ui/badge'
import { Progress } from '@/components/ui/progress'
import { Button } from '@/components/ui/button'
import { FileText, TrendingUp, MessageCircle, Upload, BarChart } from 'lucide-react'
import { supabase } from '@/lib/supabase'
import { SentimentTrendChart } from '@/components/ui/SentimentTrendChart'
import { CommunicationStyleChart } from '@/components/ui/CommunicationStyleChart'

export const DashboardContent = React.memo(function DashboardContent() {
  const router = useRouter()
  const [userProfile, setUserProfile] = useState(null)
  const [loading, setLoading] = useState(true)

  const handleUploadClick = useCallback(() => {
    router.push('/questionnaire')
  }, [router])

  useEffect(() => {
    const fetchUserProfile = async () => {
      try {
        const { data: { user } } = await supabase.auth.getUser()
        if (user) {
          const { data: profile } = await supabase
            .from('profiles')
            .select('*')
            .eq('id', user.id)
            .single()
          setUserProfile(profile)
        }
      } catch (error) {
        console.error('Error fetching user profile:', error)
      } finally {
        setLoading(false)
      }
    }

    fetchUserProfile()
  }, [])

  if (loading) {
    return (
      <div className="p-6 max-w-7xl mx-auto">
        <div className="animate-fade-in">
          <div className="h-8 bg-gradient-to-r from-gray-200 to-gray-300 rounded w-1/3 mb-4 animate-pulse"></div>
          <div className="h-6 bg-gradient-to-r from-gray-200 to-gray-300 rounded w-2/3 mb-8 animate-pulse"></div>
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {[...Array(4)].map((_, i) => (
              <div 
                key={i} 
                className="h-32 bg-gradient-to-br from-gray-200 to-gray-300 rounded-xl animate-pulse shadow-sm"
                style={{ animationDelay: `${i * 0.1}s` }}
              ></div>
            ))}
          </div>
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-6 mt-8">
            {[...Array(2)].map((_, i) => (
              <div 
                key={i} 
                className="h-64 bg-gradient-to-br from-gray-200 to-gray-300 rounded-xl animate-pulse shadow-sm"
                style={{ animationDelay: `${(i + 4) * 0.1}s` }}
              ></div>
            ))}
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="p-6 max-w-7xl mx-auto">
      <div className="mb-8">
        <h1 className="text-3xl font-bold mb-2">Welcome back, {userProfile?.full_name || 'Martin'}!</h1>
        <p className="text-muted-foreground">
          Here&apos;s your relationship insights dashboard
        </p>
      </div>

      {/* Top Row: Metrics Cards */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
        {/* Total Reports */}
        <Card className="bg-white border border-gray-100 shadow-sm">
          <CardContent className="p-6">
            <div className="text-sm text-gray-600 mb-2">Total Reports</div>
            <div className="text-4xl font-bold text-gray-900 mb-2">45</div>
          </CardContent>
        </Card>

        {/* Average Sentiment */}
        <Card className="bg-white border border-gray-100 shadow-sm">
          <CardContent className="p-6">
            <div className="text-sm text-gray-600 mb-2">Average Sentiment</div>
            <div className="text-4xl font-bold text-gray-900 mb-2">7,4</div>
          </CardContent>
        </Card>

        {/* Top Communicative Style */}
        <Card className="bg-white border border-gray-100 shadow-sm">
          <CardContent className="p-6">
            <div className="text-sm text-gray-600 mb-2">Top Communicative Style</div>
            <div className="text-2xl font-bold text-gray-900 mb-2">Constructive</div>
          </CardContent>
        </Card>

        {/* Upload Chat Record Analysis */}
        <Card className="bg-gray-50 border border-gray-100 shadow-sm">
          <CardContent className="p-6">
            <div className="text-sm font-medium text-gray-900 mb-2">Upload Chat Record Analysis</div>
            <div className="text-sm text-gray-600 mb-4 leading-relaxed">
              Upload your existing chat record, complete a quick questionnaire, and obtain an in-depth, personalized relationship analysis report.
            </div>
            <Button className="w-full bg-gray-800 hover:bg-gray-900 text-white" onClick={handleUploadClick}>
              Upload and Start
            </Button>
          </CardContent>
        </Card>
      </div>

      {/* Bottom Row: Charts */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <SentimentTrendChart />
        <CommunicationStyleChart />
      </div>
    </div>
  )
})